const e=JSON.parse('{"key":"v-30001da6","path":"/Travel_in_Cryptography/04-RSA-digital-sign.html","title":"4.RSA数字签名","lang":"zh-CN","frontmatter":{"title":"4.RSA数字签名","date":"2023-03-22T22:43:59.000Z","icon":"file-lines","category":["CTF","Cryptography"],"description":"RSA数字签名 背景 我们在上一篇文章“RSA加密算法中”，分别以上帝视角和中间人视角亲身经历了一次加密传输信息的过程。但是这个过程中仍然存在漏洞。现在假设我们作为一个中间人，根据加解密的过程，我们也可以通过公钥来加密自己的明文传给那位女生，并且把那位男生想要发给女生的密文扔掉，简言之，我们可以截获密文，并且伪造发送者的身份。这怎么行？万一有个捣蛋鬼把情书改成“我讨厌你”那不就完蛋了？所以我们需要对消息进行“签名”。 “签名”，顾名思义，就是证明这段消息确实是我发送的，接下来让我们谈一谈男生怎么对自己的情书进行签名。 实践-签名","head":[["meta",{"property":"og:url","content":"https://someijam.github.io/SomeiWiki/SomeiWiki/Travel_in_Cryptography/04-RSA-digital-sign.html"}],["meta",{"property":"og:site_name","content":"SomeiWiki"}],["meta",{"property":"og:title","content":"4.RSA数字签名"}],["meta",{"property":"og:description","content":"RSA数字签名 背景 我们在上一篇文章“RSA加密算法中”，分别以上帝视角和中间人视角亲身经历了一次加密传输信息的过程。但是这个过程中仍然存在漏洞。现在假设我们作为一个中间人，根据加解密的过程，我们也可以通过公钥来加密自己的明文传给那位女生，并且把那位男生想要发给女生的密文扔掉，简言之，我们可以截获密文，并且伪造发送者的身份。这怎么行？万一有个捣蛋鬼把情书改成“我讨厌你”那不就完蛋了？所以我们需要对消息进行“签名”。 “签名”，顾名思义，就是证明这段消息确实是我发送的，接下来让我们谈一谈男生怎么对自己的情书进行签名。 实践-签名"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-31T12:02:37.000Z"}],["meta",{"property":"article:author","content":"Someijam"}],["meta",{"property":"article:published_time","content":"2023-03-22T22:43:59.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-31T12:02:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.RSA数字签名\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-22T22:43:59.000Z\\",\\"dateModified\\":\\"2024-01-31T12:02:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someijam\\",\\"url\\":\\"https://blog.someijam.cn\\",\\"email\\":\\"lingsomeijam1@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"实践-签名","slug":"实践-签名","link":"#实践-签名","children":[]},{"level":2,"title":"实践-伪装发送者","slug":"实践-伪装发送者","link":"#实践-伪装发送者","children":[]},{"level":2,"title":"实践-篡改消息","slug":"实践-篡改消息","link":"#实践-篡改消息","children":[]},{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"实践-“我说过这话？”","slug":"实践-我说过这话","link":"#实践-我说过这话","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1699346960000,"updatedTime":1706702557000,"contributors":[{"name":"Someijam","email":"lingsomeijam1@outlook.com","commits":2}]},"readingTime":{"minutes":6.26,"words":1877},"filePathRelative":"Travel_in_Cryptography/04-RSA-digital-sign.md","localizedDate":"2023年3月22日","excerpt":"<h1> RSA数字签名</h1>\\n<h2> 背景</h2>\\n<p>我们在上一篇文章“RSA加密算法中”，分别以上帝视角和中间人视角亲身经历了一次加密传输信息的过程。但是这个过程中仍然存在漏洞。现在假设我们作为一个中间人，根据加解密的过程，我们也可以通过公钥来加密自己的明文传给那位女生，并且把那位男生想要发给女生的密文扔掉，简言之，我们可以截获密文，并且伪造发送者的身份。这怎么行？万一有个捣蛋鬼把情书改成“我讨厌你”那不就完蛋了？所以我们需要对消息进行“签名”。</p>\\n<p>“签名”，顾名思义，就是证明这段消息确实是我发送的，接下来让我们谈一谈男生怎么对自己的情书进行签名。</p>\\n<h2> 实践-签名</h2>","autoDesc":true}');export{e as data};
